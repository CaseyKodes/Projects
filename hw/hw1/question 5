	addi s1, x0, 1 # storing 1 inside of s1
	add s2, x0, x0 # storing 0 in s2, s2 will be used as a counter

	# getting number to run function on from user
	addi    a7, x0, 5
        ecall
        add    s0, a0, x0
	
	add t0, s0, x0 # storing value in t0
	beq t0, s1, end
	
	# t1 is only ever used for andi and branch statments 
	# t0 is the actual number that is being changed
	andi t1, t0, 1 # getting the and of the value and 1 to see if it's even or odd
	beq t1, x0, even # chceking even 
	beq t1, s1, odd # checking odd
	
even:
	addi s2, s2, 1 # increase counter
	srai t0, t0, 1 # shifting t0 1 bit to the right
	
	beq t0, s1, end # checking if t0 is 1

	andi t1, t0, 1 # getting the and of the value and 1 to see if it's even or odd
	beq t1, x0, even
	beq t1, s1, odd
	
odd:
	addi s2, s2, 1 # increase counter
	add t3, t0, t0 # t3 now equal 2*t0
	add t3, t3, t0 # t0 now equals 3*t0
	addi t3, t3, 1 # t0 now equal s 3*t0+1
	add t0, t3, x0 # moving value back to t0
	andi t1, t0, 1 # getting the and of the value and 1 to see if it's even or odd
	beq t1, x0, even
	beq t1, s1, odd

end:
	add a0, s2, x0  # storing counter value in a0 to be printed
	addi a7, x0, 1 # putting system call 1(print integer) in a7 
	ecall # printing a0
	
	addi a7, x0, 10 # sysetm call to end program
        ecall
	